# sensible
setw -q -g utf8 on
set -q -g status-utf8 on                  # expect UTF-8 (tmux < 2.2)
set -g history-limit 50000
set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000 # slightly longer status messages display time
set -g default-terminal "screen-256color" # colors!
set-option -ga terminal-overrides ",*256col*:Tc" # true color
set -g status-keys emacs
set -g focus-events on # focus events enabled for terminals that support them
setw -g aggressive-resize on

# escape time
set -sg escape-time 0

set-window-option -g aggressive-resize on

# set C-s as the default prefix key combination
# and unbind C-b to free it up
set -g prefix C-s
unbind C-b

# use send-prefix to pass C-a through to application
bind C-s send-prefix

# window switching
bind-key s last-window
bind-key p previous-window
bind-key n next-window

# use PREFIX | to split window horizontally and PREFIX - to split vertically
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# keep the same path in new window
bind c new-window -c "#{pane_current_path}"

# map Vi movement keys as pane movement keys
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes using PREFIX H, J, K, L
bind H resize-pane -L 5
bind J resize-pane -D 5
bind K resize-pane -U 5
bind L resize-pane -R 5

# Make the current window the first window
bind T swap-window -t 1
# Move window prefix </>
bind-key -r "<" swap-window -t -1
bind-key -r ">" swap-window -t +1

# reload ~/.tmux.conf using PREFIX r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# switch pane
bind-key 0 run "tmux split-window -l 12 'zsh -ci ftpane'"

# disable mouse control by default - change 'off' to 'on' to enable by default.
set -gq mouse off
setw -gq mode-mouse off
set-option -gq mouse-resize-pane off
set-option -gq mouse-select-pane off
set-option -gq mouse-select-window off
# toggle mouse mode to allow mouse copy/paste
# set mouse on with prefix m
bind m \
    set -gq mouse on \;\
    set -gq mode-mouse on \;\
    set -gq mouse-resize-pane on \;\
    set -gq mouse-select-pane on \;\
    set -gq mouse-select-window on \;\
    display 'Mouse: ON'
# set mouse off with prefix M
bind M \
    set -gq mouse off \;\
    set -gq mode-mouse off \;\
    set -gq mouse-resize-pane off \;\
    set -gq mouse-select-pane off \;\
    set -gq mouse-select-window off \;\
    display 'Mouse: OFF'

# bind -n WheelUpPane copy-mode

# set window and pane index to 1 (0 by default)
set-option -g base-index 1
setw -g pane-base-index 1

# don't rename windows automatically
set-option -g allow-rename off

# use vim keybindings in copy mode
setw -g mode-keys vi
# copy to system cliboard, DEPENDS on xsel
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xsel -i --clipboard"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
# Restore C-l
bind C-l send-keys 'C-l'

######################
### DESIGN CHANGES ###
######################

# update interval
set -g status-interval 1

# panes
set -g pane-border-style fg=black
set -g pane-active-border-style fg=brightred

## Status bar design
# status line
set -g status-justify left
set -g status-style bg=default,fg=colour12

# messaging
set-option -g message-style fg=black,bg=yellow

set-option -g message-command-style fg=blue,bg=black

#window mode
setw -g mode-style bg=colour6,fg=colour0

# window status
setw -g window-status-format " #F#I:#W#F "
setw -g window-status-current-format " #F#I:#W#F "
setw -g window-status-format "#[fg=magenta]#[bg=black] #I #[bg=cyan]#[fg=colour8] #W "
setw -g window-status-current-format "#[bg=brightmagenta]#[fg=colour8] #I #[fg=colour8]#[bg=colour14] #W "
setw -g window-status-current-style bg=colour0,fg=colour11,dim
setw -g window-status-style  bg=green,fg=black,reverse

# Info on left (I don't have a session display for now)
set -g status-left ''

# loud or quiet?
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-window-option -g monitor-activity off
set-option -g bell-action none

# The modes {
setw -g clock-mode-colour colour135
setw -g mode-style fg=colour196,bg=colour238,bold

# }
# The panes {

set -g pane-border-style bg=colour235,fg=colour238
set -g pane-active-border-style bg=colour236,fg=colour51

# }
# The statusbar {
set-option -g set-titles on
set-option -g set-titles-string '#h: [#S:#W] #T'

set -g status-position bottom
set -g status-style bg=colour234,fg=colour137,dim
set -g status-left ''
set -g status-right "#[bg=colour234 fg=colour237]#[fg=colour246 bg=colour237] #S #[fg=colour239,bg=colour237]#[fg=colour246,bg=colour239] #(ip -o -4 addr | awk -F 'inet |/' '!/127.0.0.1/ {print $2}' | sort -n | head -n 1) #[fg=colour235,bg=colour246,bold] %H:%M:%S "
# set -g status-right '#[bg=colour234 fg=colour237]#[fg=colour246 bg=colour237] #S #[fg=colour239,bg=colour237]#[fg=colour246,bg=colour239] %m月%d日 #[fg=colour235,bg=colour246,bold] %H:%M:%S  #{cpu_icon} #{cpu_percentage} '
set -g status-right-length 50
set -g status-left-length 20

setw -g window-status-current-style fg=colour81,bg=colour238,bold
setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '

setw -g window-status-style fg=colour138,bg=colour235,none
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

setw -g window-status-bell-style fg=colour255,bg=colour1,bold

# }

