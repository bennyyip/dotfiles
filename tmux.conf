# tmux.conf
########################################
setw -g automatic-rename on      # rename window after current program
set  -g renumber-windows on      # renumber windows when one is closed
set  -g base-index 1
setw -g pane-base-index 1
# display tmux messages longer
set  -g display-time 1500
set  -g display-panes-time 800
setw -q -g utf8 on
set -q -g status-utf8 on                  # expect UTF-8 (tmux < 2.2)
set -g history-limit 50000
set -s default-terminal "tmux-256color"
set -as terminal-overrides ",*-256color:Tc"
set -as terminal-features ",gnome*:RGB"
set -g focus-events on # focus events enabled for terminals that support them
# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize off
# For terminals that support them, propagate these events to programs that
# understand them.
set  -s focus-events on

set -sg repeat-time 600
# 0 causes glitch on startup. But faster in vim
set -sg escape-time 40
run-shell -d 2 -b "tmux set -sg escape-time 0"

# for osc52
set-window-option -g allow-passthrough on

########################################
# Keybinds                             #
########################################

# bind prefix to C-s
unbind C-b
set -g prefix C-s
bind C-s send-prefix
bind C-b display-message

# window switching
bind-key s last-window
bind-key p previous-window
bind-key n next-window

# use PREFIX | to split window horizontally and PREFIX - to split vertically
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %
bind = select-layout even-horizontal # balance-windows analogue (sort of)

# keep the same path in new window
bind c new-window -c "#{pane_current_path}"

# map Vi movement keys as pane movement keys
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes using PREFIX H, J, K, L
bind H resize-pane -L 5
bind J resize-pane -D 5
bind K resize-pane -U 5
bind L resize-pane -R 5

# Make the current window the first window
bind T swap-window -t 1
# Move window prefix </>
bind-key -r "<" swap-window -t -1
bind-key -r ">" swap-window -t +1

# reload ~/.tmux.conf using PREFIX r
bind r source-file ~/.tmux.conf \; display "Reloaded!"
bind ^r refresh-client

# disable mouse control by default - change 'off' to 'on' to enable by default.
set -gq mouse off
setw -gq mode-mouse off
set-option -gq mouse-resize-pane off
set-option -gq mouse-select-pane off
set-option -gq mouse-select-window off
# toggle mouse mode to allow mouse copy/paste
# # set mouse on with prefix m
# bind ^m \
#     set -gq mouse on \;\
#     set -gq mode-mouse on \;\
#     set -gq mouse-resize-pane on \;\
#     set -gq mouse-select-pane on \;\
#     set -gq mouse-select-window on \;\
#     display 'Mouse: ON'
# # set mouse off with prefix M
# bind ^M \
#     set -gq mouse off \;\
#     set -gq mode-mouse off \;\
#     set -gq mouse-resize-pane off \;\
#     set -gq mouse-select-pane off \;\
#     set -gq mouse-select-window off \;\
#     display 'Mouse: OFF'

# bind -n WheelUpPane copy-mode

# Vi-style keybinds
setw -g mode-keys vi
# But emacs for comamnd mode
set -g status-keys emacs

# copy to system cliboard, DEPENDS on xsel
# bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xsel -i --clipboard"
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "osc52"

set -s set-clipboard on

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?|emacsclient|emacs|fzf)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"

# Restore C-l
bind C-l send-keys 'C-l'

######################
### DESIGN CHANGES ###
######################

# update interval
set -g status-interval 1

# Info on left (I don't have a session display for now)
set -g status-left ''

# loud or quiet?
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-window-option -g monitor-activity on
set-option -g bell-action none

# The modes
setw -g clock-mode-colour colour135
setw -g mode-style fg=colour196,bg=colour238,bold

# }
# The panes

set -g pane-border-style bg=colour235,fg=colour238
set -g pane-active-border-style bg=colour236,fg=colour51

# keybinding to clear history
bind C-k clear-history \; display-message "history cleared"

# C-b ! breaks current pane into separate window
# join a pane/window from the current session into the current window
bind @ command-prompt -p "create pane from:" "join-pane -s ':%%'"

# }
# The statusbar
set-option -g set-titles on
set-option -g set-titles-string '#h: [#S:#W] #T'

set -g status-justify left
set -g status-position bottom
set -g status-left '#[bold]#S#[nobold] '
# set -g status-left ''
set -g status-style "none,bg=#32302f"
set -g status-right "#[fg=#32302f,bg=#32302f]#[fg=#ddc7a1,bg=#32302f] #([ -f $HOME/.name ] && cat $HOME/.name || hostname || cat /etc/hostname) #[fg=#32302f,bg=#5a524c]#[fg=#ddc7a1,bg=#5a524c] #(ip -o -4 addr | awk -F 'inet |/' '!/127.0.0.1/ {print $2}' | sort -n | head -n 1) #[fg=#5a524c,bg=#a89984]#[fg=#282828,bg=#a89984,bold] %H:%M:%S %p "
set -g status-right-length 50
set -g status-left-length 20

setw -g window-status-style "none,fg=#ddc7a1,bg=#32302f"
setw -g window-status-format "#{?window_activity_flag,#[fg=#d3869b],#[fg=#ddc7a1]} #I #W "
setw -g window-status-current-format "#[fg=#32302f,bg=#5a524c]#[fg=#ddc7a1,bg=#5a524c bold] #I #[fg=green]#W #F #[fg=#5a524c,bg=#32302f]"
setw -g window-status-separator ""
set -g window-status-activity-style 'none'

set-option -g message-style fg=black,bg=yellow
set-option -g message-command-style fg=blue,bg=black

# Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'fcsonline/tmux-thumbs'
set -g @thumbs-command 'echo -n {} | osc52'
run '~/.tmux/plugins/tpm/tpm'
run-shell ~/.tmux/plugins/tmux-thumbs/tmux-thumbs.tmux

# Allow local customization in ~/.tmux_local.conf
if-shell "[ -f ~/.tmux_local.conf ]" 'source ~/.tmux_local.conf'
